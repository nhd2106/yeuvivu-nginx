
# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs {
  server nextjs:3000;
}

server {
  listen 80 default_server;

  server_name thaosuongwluv.tk;

  server_tokens off;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  # BUILT ASSETS (E.G. JS BUNDLES)
  # Browser cache - max cache headers from Next.js as build id in url
  # Server cache - valid forever (cleared after cache "inactive" period)
  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://nextjs;
  }

  # STATIC ASSETS (E.G. IMAGES)
  # Browser cache - "no-cache" headers from Next.js as no build id in url
  # Server cache - refresh regularly in case of changes
  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://nextjs;
  }

  # DYNAMIC ASSETS - NO CACHE
  location / {
    proxy_pass http://nextjs;
  }
}

server {
    listen 443 ssl;
    server_name thaosuongwluv.tk;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/thaosuongwluv.tk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/thaosuongwluv.tk/privkey.pem;

    location / {
        proxy_pass  http://thaosuongwluv.tk;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }
}


# thaosuongwluv.tk is our domain

# redirect http to https
# server {
#   listen 80 default_server;
#   listen [::]:80 default_server;
#   server_name thaosuongwluv.tk;
#   return 301 https://$server_name$request_uri;
# }

# server {
#   # listen on *:443 -> ssl; instead of *:80
#   listen 443 ssl http2 default_server;
#   listen [::]:443 ssl http2 default_server;

#   server_name thaosuongwluv.tk;
  
#   ssl_certificate /etc/letsencrypt/live/thaosuongwluv.tk/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/thaosuongwluv.tk/privkey.pem;

#   location / {
#     # reverse proxy for next server
#     proxy_pass http://localhost:3000;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;
  
#     # we need to remove this 404 handling
#     # because next's _next folder and own handling
#     # try_files $uri $uri/ =404;
#   }
  
#   location ~ /.well-known {
#     allow all;
#   }
# }